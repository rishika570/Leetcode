class Solution {
    public List<List<Integer>> permuteUnique(int[] nums) {
        List<List<Integer>> res=new ArrayList<>();
        solve(0,nums.length,nums,res);
        return res;
    }
    public void solve(int ind,int n,int[] nums,List<List<Integer>> res){
        if(ind==n-1){
            List<Integer> list=new ArrayList<>();
            for(int i=0;i<n;i++){
                list.add(nums[i]);
            }
          if(!res.contains(new ArrayList<>(list))){
          res.add(new ArrayList<>(list));}
          return;
        }
        for(int i=ind;i<n;i++){
            swap(nums,ind,i);
            solve(ind+1,n,nums,res);
            swap(nums,ind,i);
        }
    }
    public void swap(int[] nums,int i,int j){
        int temp=nums[i];
        nums[i]=nums[j];
        nums[j]=temp;
    }
}
