class Solution {
    public int maxValue(int[][] events, int k) {
        Arrays.sort(events,(a,b)->a[0]-b[0]);
        int[][] dp=new int[events.length+1][k+1];
        for(int[] r:dp){
            Arrays.fill(r,-1);
        }
        return solve(events,events.length,0,k,dp);
    }
    public int solve(int[][] events,int n,int pos,int k,int[][] dp){
        if(pos>=n || k==0){
            return 0;
        }
        if(dp[pos][k]!=-1){
            return dp[pos][k];
        }
        int i;
        for(i=pos+1;i<n;i++){
            if(events[i][0]>events[pos][1]){
                break;
            }
        }
        int take=events[pos][2]+solve(events,n,i,k-1,dp);
        int ntake=solve(events,n,pos+1,k,dp);
        return dp[pos][k]=Math.max(take,ntake);
    }
}
