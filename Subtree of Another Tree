/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSubtree(TreeNode root, TreeNode subRoot) {
     if(root==null && subRoot==null){
         return true;
     }
        if(root==null || subRoot==null){
            return false;
        }
        if(root.val==subRoot.val)
        {
          //  boolean left=true,right=true;
           // if(subRoot.left!=null)
            boolean left= isSubtree(root.left,subRoot.left);
           // if(subRoot.right!=null)
            boolean right=isSubtree(root.right,subRoot.right);
            return left&&right;
        }
        else{
                boolean left= isSubtree(root.left,subRoot);
           // if(subRoot.right!=null)
            boolean right=isSubtree(root.right,subRoot);
            return left||right;
        }
     //   if(root.val!=subRoot.val)return false;
    // isSubtree(root.left,subRoot);
    //     isSubtree(root.right,subRoot);
        
        //return false;
      }
}
