/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        Stack<Integer> s1=new Stack<>();
        Stack<Integer> s2=new Stack<>();
        ListNode temp=l1;
        while(temp!=null){
            s1.push(temp.val);
            //System.out.print(temp.val+" ");
            temp=temp.next;
        }
        temp=l2;
       // System.out.println();
        while(temp!=null){
            s2.push(temp.val);
           // System.out.print(temp.val+" ");
            temp=temp.next;
        }
        int carry=0;
        int sum=0;
       // ListNode dummy=null;
        ListNode head=null;
        while(!s1.isEmpty() && !s2.isEmpty()){
            sum=s1.pop()+s2.pop()+carry;
            int sum1=sum%10;
            carry=sum/10;
            ListNode dummy=new ListNode(sum1);
            dummy.next=head;
            head=dummy;
            
        }
        while(!s1.isEmpty()){
            sum=s1.pop()+carry;
            int sum1=sum%10;
            carry=sum/10;
            ListNode dummy=new ListNode(sum1);
            dummy.next=head;
            head=dummy;
        }
        while(!s2.isEmpty()){
            sum=s2.pop()+carry;
            int sum1=sum%10;
            carry=sum/10;
            ListNode dummy=new ListNode(sum1);
            dummy.next=head;
            head=dummy;
        }
        if(carry!=0){
            sum=carry;
            int sum1=sum%10;
            carry=sum/10;
            ListNode dummy=new ListNode(sum1);
            dummy.next=head;
            head=dummy;
        }
        return head;
    }
}
