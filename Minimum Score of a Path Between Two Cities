class Solution {
    public int minScore(int n, int[][] roads) {
       List<List<Pair>> list=new ArrayList<>();
        for(int i=0;i<=n;i++){
            list.add(new ArrayList<>());}
            for(int i=0;i<roads.length;i++){
                list.get(roads[i][0]).add(new Pair(roads[i][1],roads[i][2]));
                list.get(roads[i][1]).add(new Pair(roads[i][0],roads[i][2]));
            }
            Queue<Pair> q=new LinkedList<>();
            boolean vis[]=new boolean[n+1];
            q.add(new Pair(1,Integer.MAX_VALUE));
            int ans=Integer.MAX_VALUE;
            while(!q.isEmpty()){
                Pair curr=q.poll();
                vis[curr.node]=true;
                ans=Math.min(ans,curr.dis);
                for(Pair adj:list.get(curr.node)){
                    if(!vis[adj.node]){
                        q.add(adj);
                    
                }
            }
        }
        return ans;
    }
}
class Pair{
    int node;
    int dis;
    Pair(int node,int dis){
        this.node=node;
        this.dis=dis;
    }
}
