class Solution {
    public int[] numsSameConsecDiff(int n, int k) {
        ArrayList<Integer> list=new ArrayList<>();
        if(n==1){
            return new int[]{0,1,2,3,4,5,6,7,8,9};
        }
        for(int i=1;i<=9;i++){
            dfs(n,k,i,0,i,list);
        }
        int a[]=new int[list.size()];
        for(int i=0;i<list.size();i++){
            a[i]=list.get(i);
        }
        return a;
    }
    public void dfs(int n,int k,int curr,int i,int prev,ArrayList<Integer> list){
        if(i==n-1){
            list.add(curr);
            return;
        }
        int next=prev+k;
        if(next<10){
            dfs(n,k,(curr*10)+next,i+1,next,list);
        }
        next=prev-k;
        if(k!=0 && next>=0){
            dfs(n,k,(curr*10)+next,i+1,next,list);
        }
    }
}
