class Solution {
    public int largestPathValue(String colors, int[][] edges) {
        List<List<Integer>> list=new ArrayList<>();
        List<int[]> c=new ArrayList<>();
        int n=colors.length();
        for(int i=0;i<n;i++){
            list.add(new ArrayList<>());
            c.add(new int[26]);
        }
        int[] in=new int[n];
        for(int i=0;i<edges.length;i++){
            list.get(edges[i][0]).add(edges[i][1]);
            in[edges[i][1]]++;
        }
        List<Integer> q=new ArrayList<>();
        for(int i=0;i<n;i++){
            if(in[i]==0){
                q.add(i);
            }
        }
        int res=0,p=0;
        while(!q.isEmpty()){
            List<Integer> q1=new ArrayList<>();
            for(int i:q){
                p++;
                res=Math.max(res,++c.get(i)[colors.charAt(i)-'a']);
                for (int j : list.get(i)) {
                for (int k = 0; k < 26; k++)
                    c.get(j)[k] = Math.max(c.get(j)[k], c.get(i)[k]);
                if (--in[j] == 0)
                    q1.add(j);
            }
            }
            q=q1;
        }
        return p!=n?-1:res;
    }
}
