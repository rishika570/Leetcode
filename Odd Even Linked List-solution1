/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode oddEvenList(ListNode head) {
        ArrayList<ListNode> list=new ArrayList<>();
        ListNode temp=head;
        while(temp!=null){
            list.add(temp);
            temp=temp.next;
        }
        ArrayList<ListNode> odd=new ArrayList<>();
        ArrayList<ListNode> even=new ArrayList<>();
        for(int i=1;i<=list.size();i++){
            if(i%2!=0){
                odd.add(list.get(i-1));
            }
            else{
                even.add(list.get(i-1));
            }
        }
        ArrayList<ListNode> res=new ArrayList<>();
        for(int i=0;i<odd.size();i++){
            res.add(odd.get(i));
        }
        for(int i=0;i<even.size();i++){
            res.add(even.get(i));
        }
        ListNode head1=null;
        for(int i=res.size()-1;i>=0;i--){
            ListNode newnode=new ListNode(res.get(i).val);
            newnode.next=head1;
            head1=newnode;
        }
        return head1;
    }
}
