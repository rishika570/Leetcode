class Solution {
    HashMap<Integer,ArrayList<Integer>> map=new HashMap<>();
    public int[] restoreArray(int[][] adjacentPairs) {
       for(int[] r:adjacentPairs){
           int x=r[0];
           int y=r[1];
           if(!map.containsKey(x)){
               map.put(x,new ArrayList<>());
           }
           if(!map.containsKey(y)){
               map.put(y,new ArrayList<>());
           }
           map.get(x).add(y);
           map.get(y).add(x);
       }
        int root=0;
        for(int num:map.keySet()){
            if(map.get(num).size()==1){
                root=num;
                break;
            }
        }
        int[] res=new int[map.size()];
        dfs(root,Integer.MAX_VALUE,res,0);
        return res;
    }
    public void dfs(int root,int prev,int[] res,int i){
        res[i]=root;
        for(int nbr:map.get(root)){
            if(nbr!=prev){
                dfs(nbr,root,res,i+1);
            }
        }
    }
    
}
