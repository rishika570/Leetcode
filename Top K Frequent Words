class Solution {
    public List<String> topKFrequent(String[] words, int k) {
        List<String> res=new ArrayList<>();
        HashMap<String,Integer> map=new HashMap<>();
        for(int i=0;i<words.length;i++){
            if(map.containsKey(words[i])){
                map.put(words[i],map.get(words[i])+1);
            }
            else{
                map.put(words[i],1);
            }
        }
       List<String> list = new ArrayList<>(map.keySet());
		Collections.sort(list, (w1, w2) -> 
                        (map.get(w1) == map.get(w2)) ? 
                        w1.compareTo(w2) : map.get(w2) - map.get(w1));
        //After sorting, Store the final k words in a result list and return it
		List<String> result = new ArrayList<>();
        for (int i = 0; i < k; i++) {
            result.add(list.get(i));
        }
        return result;
    }}
