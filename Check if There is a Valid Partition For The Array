class Solution {
    public boolean validPartition(int[] nums) {
        int[] dp=new int[nums.length+1];
        Arrays.fill(dp,-1);
      return solve(0,nums,dp)>0;  
    }
    public int solve(int i,int[] nums,int[] dp){
        if(i==nums.length){
            return 1;
        }
        if(dp[i]!=-1){
            return dp[i];
        }
        int ans=0;
        if(i+1<nums.length && nums[i]==nums[i+1]){
           ans=Math.max(ans,solve(i+2,nums,dp)); 
        }
        if(i+2<nums.length && nums[i]==nums[i+1] && nums[i]==nums[i+2]){
            ans=Math.max(ans,solve(i+3,nums,dp));
        }
        if(i+2<nums.length && nums[i+1]-nums[i]==1 && nums[i+2]-nums[i+1]==1){
            ans=Math.max(ans,solve(i+3,nums,dp));
        }
        return dp[i]=ans;
    }
}
