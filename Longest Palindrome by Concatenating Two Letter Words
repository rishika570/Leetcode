class Solution {
    public int longestPalindrome(String[] words) {
        HashMap<String,Integer> map=new HashMap<>();
        for(int i=0;i<words.length;i++){
            if(map.containsKey(words[i])){
                map.put(words[i],map.get(words[i])+1);
            }
            else{
                map.put(words[i],1);
            }
        }
        int ans=0;
        boolean central=false;
        for(Map.Entry<String,Integer> entry:map.entrySet()){
            String word=entry.getKey();
            int c=entry.getValue();
            if(word.charAt(0)==word.charAt(1)){
                if(c%2==0){
                    ans+=c;
                }
                else{
                    ans+=c-1;
                    central=true;
                }
            }
            else if(word.charAt(0)<word.charAt(1)){
                String rev=""+word.charAt(1)+word.charAt(0);
                if(map.containsKey(rev)){
                    ans+=2*Math.min(c,map.get(rev));
                }
            }
        }
        if(central){
            ans++;
        }
        return 2*ans;
    }
}
