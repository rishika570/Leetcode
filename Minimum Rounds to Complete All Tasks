class Solution {
    public int minimumRounds(int[] tasks) {
        HashMap<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<tasks.length;i++){
            if(map.containsKey(tasks[i])){
                map.put(tasks[i],map.get(tasks[i])+1);
            }
            else{
                map.put(tasks[i],1);
            }
        }
        //System.out.println(map);
        int c=0;
        for(Map.Entry<Integer,Integer> entry:map.entrySet()){
            if(entry.getValue()==1){
                return -1;
            }
            else{
                int c1=(entry.getValue()/2);//2
                int c2=(entry.getValue()/3);//1
                int c3=0;
                if(entry.getValue()%3==2 || entry.getValue()%3==1){
                    c3=c2+1;//1
                }
                if(c3!=0){
              c+=Math.min(c3,c1);}
                else{
                    c+=Math.min(c1,c2);
                }
            }
        }
        return c;
        
    }
}
